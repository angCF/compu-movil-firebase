// Generated by Dagger (https://dagger.dev).
package com.puj.taller03_cm.dependencies.components;

import com.google.errorprone.annotations.CanIgnoreReturnValue;
import com.puj.taller03_cm.activities.BasicActivity;
import com.puj.taller03_cm.activities.BasicActivity_MembersInjector;
import com.puj.taller03_cm.dependencies.modules.AlertsModule;
import com.puj.taller03_cm.dependencies.modules.AlertsModule_ProvideAlertHelperFactory;
import com.puj.taller03_cm.dependencies.modules.GeoInfoModule;
import com.puj.taller03_cm.dependencies.modules.GeocoderModule;
import com.puj.taller03_cm.dependencies.modules.LocationModule;
import com.puj.taller03_cm.dependencies.modules.PermissionModule;
import com.puj.taller03_cm.utils.AlertsHelper;
import dagger.internal.DaggerGenerated;
import dagger.internal.DoubleCheck;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DaggerApplicationComponent {
  private DaggerApplicationComponent() {
  }

  public static Builder builder() {
    return new Builder();
  }

  public static ApplicationComponent create() {
    return new Builder().build();
  }

  public static final class Builder {
    private AlertsModule alertsModule;

    private Builder() {
    }

    public Builder alertsModule(AlertsModule alertsModule) {
      this.alertsModule = Preconditions.checkNotNull(alertsModule);
      return this;
    }

    /**
     * @deprecated This module is declared, but an instance is not used in the component. This method is a no-op. For more, see https://dagger.dev/unused-modules.
     */
    @Deprecated
    public Builder permissionModule(PermissionModule permissionModule) {
      Preconditions.checkNotNull(permissionModule);
      return this;
    }

    /**
     * @deprecated This module is declared, but an instance is not used in the component. This method is a no-op. For more, see https://dagger.dev/unused-modules.
     */
    @Deprecated
    public Builder geoInfoModule(GeoInfoModule geoInfoModule) {
      Preconditions.checkNotNull(geoInfoModule);
      return this;
    }

    /**
     * @deprecated This module is declared, but an instance is not used in the component. This method is a no-op. For more, see https://dagger.dev/unused-modules.
     */
    @Deprecated
    public Builder geocoderModule(GeocoderModule geocoderModule) {
      Preconditions.checkNotNull(geocoderModule);
      return this;
    }

    /**
     * @deprecated This module is declared, but an instance is not used in the component. This method is a no-op. For more, see https://dagger.dev/unused-modules.
     */
    @Deprecated
    public Builder locationModule(LocationModule locationModule) {
      Preconditions.checkNotNull(locationModule);
      return this;
    }

    public ApplicationComponent build() {
      if (alertsModule == null) {
        this.alertsModule = new AlertsModule();
      }
      return new ApplicationComponentImpl(alertsModule);
    }
  }

  private static final class ApplicationComponentImpl implements ApplicationComponent {
    private final ApplicationComponentImpl applicationComponentImpl = this;

    private Provider<AlertsHelper> provideAlertHelperProvider;

    private ApplicationComponentImpl(AlertsModule alertsModuleParam) {

      initialize(alertsModuleParam);

    }

    @SuppressWarnings("unchecked")
    private void initialize(final AlertsModule alertsModuleParam) {
      this.provideAlertHelperProvider = DoubleCheck.provider(AlertsModule_ProvideAlertHelperFactory.create(alertsModuleParam));
    }

    @Override
    public void inject(BasicActivity activity) {
      injectBasicActivity(activity);
    }

    @CanIgnoreReturnValue
    private BasicActivity injectBasicActivity(BasicActivity instance) {
      BasicActivity_MembersInjector.injectAlertsHelper(instance, provideAlertHelperProvider.get());
      return instance;
    }
  }
}
