// Generated by Dagger (https://dagger.dev).
package com.puj.taller03_cm.activities;

import com.puj.taller03_cm.services.GeoInfoFromJsonService;
import com.puj.taller03_cm.services.GeocoderService;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MapFragment_MembersInjector implements MembersInjector<MapFragment> {
  private final Provider<GeoInfoFromJsonService> geoInfoFromJsonServiceProvider;

  private final Provider<GeocoderService> geocoderServiceProvider;

  public MapFragment_MembersInjector(
      Provider<GeoInfoFromJsonService> geoInfoFromJsonServiceProvider,
      Provider<GeocoderService> geocoderServiceProvider) {
    this.geoInfoFromJsonServiceProvider = geoInfoFromJsonServiceProvider;
    this.geocoderServiceProvider = geocoderServiceProvider;
  }

  public static MembersInjector<MapFragment> create(
      Provider<GeoInfoFromJsonService> geoInfoFromJsonServiceProvider,
      Provider<GeocoderService> geocoderServiceProvider) {
    return new MapFragment_MembersInjector(geoInfoFromJsonServiceProvider, geocoderServiceProvider);
  }

  @Override
  public void injectMembers(MapFragment instance) {
    injectGeoInfoFromJsonService(instance, geoInfoFromJsonServiceProvider.get());
    injectGeocoderService(instance, geocoderServiceProvider.get());
  }

  @InjectedFieldSignature("com.puj.taller03_cm.activities.MapFragment.geoInfoFromJsonService")
  public static void injectGeoInfoFromJsonService(MapFragment instance,
      GeoInfoFromJsonService geoInfoFromJsonService) {
    instance.geoInfoFromJsonService = geoInfoFromJsonService;
  }

  @InjectedFieldSignature("com.puj.taller03_cm.activities.MapFragment.geocoderService")
  public static void injectGeocoderService(MapFragment instance, GeocoderService geocoderService) {
    instance.geocoderService = geocoderService;
  }
}
