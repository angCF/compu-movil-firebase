// Generated by view binder compiler. Do not edit!
package com.puj.taller03_cm.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.switchmaterial.SwitchMaterial;
import com.google.android.material.textfield.TextInputLayout;
import com.puj.taller03_cm.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMapBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout buttonPanel;

  @NonNull
  public final SwitchMaterial isCameraFixedToUser;

  @NonNull
  public final FragmentContainerView map;

  @NonNull
  public final Button materialButton;

  @NonNull
  public final TextInputLayout textInputLayout;

  @NonNull
  public final TextView textView;

  private FragmentMapBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout buttonPanel, @NonNull SwitchMaterial isCameraFixedToUser,
      @NonNull FragmentContainerView map, @NonNull Button materialButton,
      @NonNull TextInputLayout textInputLayout, @NonNull TextView textView) {
    this.rootView = rootView;
    this.buttonPanel = buttonPanel;
    this.isCameraFixedToUser = isCameraFixedToUser;
    this.map = map;
    this.materialButton = materialButton;
    this.textInputLayout = textInputLayout;
    this.textView = textView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMapBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMapBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_map, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMapBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonPanel;
      ConstraintLayout buttonPanel = ViewBindings.findChildViewById(rootView, id);
      if (buttonPanel == null) {
        break missingId;
      }

      id = R.id.isCameraFixedToUser;
      SwitchMaterial isCameraFixedToUser = ViewBindings.findChildViewById(rootView, id);
      if (isCameraFixedToUser == null) {
        break missingId;
      }

      id = R.id.map;
      FragmentContainerView map = ViewBindings.findChildViewById(rootView, id);
      if (map == null) {
        break missingId;
      }

      id = R.id.materialButton;
      Button materialButton = ViewBindings.findChildViewById(rootView, id);
      if (materialButton == null) {
        break missingId;
      }

      id = R.id.textInputLayout;
      TextInputLayout textInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayout == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      return new FragmentMapBinding((ConstraintLayout) rootView, buttonPanel, isCameraFixedToUser,
          map, materialButton, textInputLayout, textView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
